:root {
 
  --primary: #00796B;       
  --primary-light: #4DB6AC; 
  --primarytab: #003a35;      
  --primarytab-light: #0a453e;        
  --secondary: #004D40;      
  --accent: #FFC107;        
  --danger: #D32F2F;       
  --background: #121212;  
  --surface: #1E1E1E;       
 
  --radius: 0.5rem; 
  --shadow: 0 4px 10px rgba(0, 0, 0, 0.4);  
  --text-color: #b5cddbd8;    
  --text-light: #B0B0B0;    
  --font-family: 'Inter', 'Segoe UI', Roboto, sans-serif;
}

body {
  margin: 0;
  font-family: var(--font-family);
  background-color: var(--background);
  color: var(--text-color);
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  color: var(--text-color); 
  justify-content:left;
}

a {
  color: var(--primary-light);  
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}
header {
  text-align: center;
  padding: 1.5rem;
  background: linear-gradient(45deg, var(--primary), var(--primary-light));
  color: white;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
}
  
.tabs-nav {
  width: 250px;
  height: 100%;
  background-color: var(--secondary);
  padding: 1rem;
  color: #fff;
  box-shadow: inset -1px 0 4px rgba(0, 0, 0, 0.15);
}

.main-layout-container {
  display: flex;
  height: calc(90vh - 120px);
}


.bottom-header {
  position: fixed;
  bottom: 0;
  width: 100%;
  background: var(--primary);
  color: #fff;
  text-align: center;
  padding: 0.75rem;
  font-size: 0.9rem;
}

.videoD-container,
.recorder-container,
.item-container {
  max-width: 90%;
  min-width: 50%;
  margin: 2rem auto;
  padding: 2rem; 
  background-color: var(--surface);
  border-radius: var(--radius); 
  box-shadow: var(--shadow);  
  display: grid;
  grid-template-columns: 2fr 1fr;
  gap: 1.5rem;
}

.videoD-container { 
  display:block;  
} 
@media (max-width: 1023px) { 
  .videoD-container {
    grid-template-columns: 1fr; 
    max-width: 80%;  
  }
} 

@media (max-width: 1023px) { 
  .item-container {
    grid-template-columns: 1fr; 
    max-width: 80%;
  }
}
.item-container > .card_rec:nth-child(3) { 
    grid-column: 1 / 2;  
    grid-row: 1 / 3;  
}
.item-container > .card_rec:nth-child(1),
.item-container > .card_rec:nth-child(2) {
    grid-column: 2 / 3; 
} 
@media (max-width: 1023px) {  
  .recorder-container {
    grid-template-columns: 1fr;  
    max-width: 80%;  
  }
  .recorder-container > .card_rec:nth-child(1),
  .recorder-container > .card_rec:nth-child(2) {
    grid-column: 1 / 2; 
    grid-row: auto; 
  } 
} 
.recorder-container > .card_rec:nth-child(3) { 
    grid-column: 1 / 2;  
    grid-row: 1 / 3;  
}
 
.card_rec {
  min-height: auto;
  background: var(--surface);  
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  margin-bottom: 1.75rem;
  transition: all 0.25s ease;
  border: 1px solid #282828;  
}
.card_rec:hover {
  /* transform: translateY(-3px); */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.6);  
}
.card-header {
  padding: 1rem 1.5rem;
  font-size: 1.125rem;
  font-weight: 600;
  border-bottom: 1px solid var(--secondary); 
  background: linear-gradient(to right, var(--secondary), var(--primary));
  color:  --text-color;
  border-top-left-radius: var(--radius);
  border-top-right-radius: var(--radius);
}
.card-body {
  padding: 1.5rem;
}

/* ================================
   Buttons
   ================================ */
.buttonclass {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
  padding: 0.65rem 1.4rem;
  font-weight: 600;
  font-size: 0.95rem;
  color: #fff;
  border-radius: 9999px;
  border: none;
  cursor: pointer;
  transition: all 0.25s ease-in-out; 
  background: linear-gradient(45deg, var(--primary), var(--primary-light)); 
  box-shadow: 0 2px 5px rgba(0, 121, 107, 0.6);
}
.buttonclass:hover { 
  background: linear-gradient(45deg, var(--primary-light), var(--primary));
  transform: translateY(-1px); 
  box-shadow: 0 4px 10px rgba(0, 121, 107, 0.8);
}
.buttonclass:active {
  transform: scale(0.97);
}
.buttonclass:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* ================================
   Tab buttons
   ================================ */


.tab-button-font {
  font-size: 250%;
  font-family: cursive;
  margin: 0;
  color: #8a8a8aaa; 
}

.tab-button {   
  width:250px; 
  overflow:visible;
  background: var(--primarytab); 
  transition: transform 0.2s;
}
 

.tab-button:hover { 
  background: var(--primarytab-light);
  transition: transform 0.2s;
}
 

.tab-button::after {
  background: rgba(46, 96, 154, 0.247); 
  transition: transform 0.2s;
}

.tab-button:hover::after {
  background: rgba(46, 96, 154, 0.347); 
  transition: transform 0.2s;
}
/* ================================
   Inputs
   ================================ */
input[type="text"], input[type="number"], select, textarea {
  width: auto;
  padding: 0.65rem;
  border-radius: var(--radius);
  font-family: var(--font-family);
  transition: border-color 0.2s ease;
  border: 1px solid #3A3A3A;  
  background-color: #242424;  
  color: var(--text-color);
}
input:focus, select:focus, textarea:focus {
  outline: none; 
  border-color: var(--accent);
}

/* ================================
   Source Selection Styling
   ================================ */
.form-option-group {
  border: none;
  padding: 0;
  margin: 0;
}
.form-option-group legend {  

  font-size: 1.1em;
  font-weight: 600;
  margin-bottom: 12px;
  color: var(--text-light);
}

.options-container {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;  
}
.options-container label { 
  position: relative;
  display: inline-block;
  padding: 10px 20px;
  background-color: #4e4a68;
  border: 2px solid #2d3748;
  border-radius: 50px; 
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  font-weight: 500;
  color: #e2e8f0;
  user-select: none; 
} 
 
.options-container input[type="radio"] {
  opacity: 0;
  position: absolute;
  width: 0;
  height: 0;
}
 
.options-container label:hover {
  background-color: #242424;
  border-color: var(--primary); 
}
 
.options-container label.selected { 
  background-color: var(--accent);
  border-color: var(--accent);
  color: #121212;  
  font-weight: 700;
}
 

/* ================================
   Animations & Responsive
   ================================ */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-4px); }
  to { opacity: 1; transform: translateY(0); }
}

@media (max-width: 768px) {
  .card-header { font-size: 1rem; }
  .buttonclass { font-size: 0.9rem; padding: 0.5rem 1rem; }
  .item-container, .videoD-container { padding: 1rem; }
}

/* --- Checkbox Styling --- */

/* 1. Hides the native input but keeps it focusable/accessible */
.checkbox-container input[type="checkbox"] {
  /* Use 'appearance: none' for a modern hide */
  -webkit-appearance: none;
  appearance: none;
  /* Still keeping a small size/position just in case for older browsers, 
     but mostly opacity/position is used */
  position: absolute;
  width: 1px;
  height: 1px;
  opacity: 0;
}

/* 2. Style the custom box using the label's ::before pseudo-element */
.checkbox-container label {
  position: relative; /* Needed to position the ::before element */
  cursor: pointer;
  padding-left: 28px; /* Make space for the custom box */
  display: inline-flex; /* Align text and box vertically */
  align-items: center;
  user-select: none;
}

/* 3. The unchecked box visual (::before) */
.checkbox-container label::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%); /* Center vertically */
  width: 20px;
  height: 20px;
  border: 2px solid #4e4e4e;
  border-radius: 4px;
  background-color: #666666;
  transition: all 0.2s ease;
}

/* 4. Style when the checkbox is checked */
.checkbox-container input[type="checkbox"]:checked + label::before {
  background-color: #00ff22a5; /* Primary color when checked */
  border-color: #007410a5;
}

/* 5. The checkmark visual (::after) - only visible when checked */
.checkbox-container input[type="checkbox"]:checked + label::after {
  position: absolute;
  left: 6px;
  top: 50%;
  width: 6px;
  height: 12px;
  border: solid #666666;  
  border-width: 0 3px 3px 0; /* Creates the L shape */
}

/* 6. Accessibility and Interaction Styles */

/* Hover state on the custom box */
.checkbox-container input[type="checkbox"]:hover + label::before {
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
}

/* Focus state for keyboard users */
.checkbox-container input[type="checkbox"]:focus + label::before {
  /* Use a visible outline around the custom box */
  box-shadow: 0 0 0 3px #007410a5;
}